
// Сохранить файл
Процедура ДействияФормыКнопкаСохранить(Кнопка)
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	Иначе
		Ссылка = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
		ИмяФайла = ЭлементыФормы.СправочникСписок.ТекущиеДанные.ИмяФайла;
	КонецЕсли;
	
	Если Не ПроверитьДанныеХранилища(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ИмяФайла;
	Если Не Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	Если МодульРаботыСФайламиХранилищаДанных.РезультатПолученияДанных(Ссылка, Диалог.ПолноеИмяФайла) Тогда 
		Возврат;
	Иначе 
		Предупреждение("Файл не записан! Проблемы получения данных.");
		Возврат;
	КонецЕсли;
КонецПроцедуры

// Открыть файл на просмотр
Процедура ДействияФормыКнопкаОткрыть(Кнопка)
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	Иначе
		Ссылка = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
		ИмяФайла = ЭлементыФормы.СправочникСписок.ТекущиеДанные.ИмяФайла;
	КонецЕсли;
	
	Если Не ПроверитьДанныеХранилища(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКаталога = ПолучитьИмяВременногоФайла("") + ПолучитьРазделительПути();
	СоздатьКаталог(ИмяКаталога);
	ПолноеИмяФайла = "";
	
	Если МодульРаботыСФайламиХранилищаДанных.РезультатПолученияДанных(Ссылка, ИмяКаталога, ПолноеИмяФайла) Тогда 
		КодВозврата = Неопределено;
		
		ЗапуститьПриложение("""" + ПолноеИмяФайла + """", , Истина, КодВозврата);
		
		Если КодВозврата <> Неопределено Тогда 
			МодульРаботыСФайламиХранилищаДанных.УдалитьВременныйФайл(ПолноеИмяФайла);
		КонецЕсли;
		
		Возврат;
	Иначе 
		Предупреждение("Файл не доступен! Проблемы получения данных.");
		Возврат;
	КонецЕсли;
КонецПроцедуры

// Изменить данные
Процедура ДействияФормыКнопкаИзменить(Кнопка)
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	Иначе
		Ссылка = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
		ИмяФайла = ЭлементыФормы.СправочникСписок.ТекущиеДанные.ИмяФайла;
	КонецЕсли;
	
	// Проверим, есть ли какие-нибудь данные
	Если ПроверитьДанныеХранилища(Ложь) Тогда
		Ответ = Вопрос("Заменить данные?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Подготовим диалог выбора файла
	Диалог = РаботаСФайлами.ПолучитьДиалогВыбораФайлов(Ложь);
	Диалог.ПредварительныйПросмотр = Ложь;
	
	// Откроем диалог выбора
	Если Не Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	// Запишем в хранилище выбранный файл
	Попытка
		ВыбранныйФайл = Новый Файл(Диалог.ПолноеИмяФайла);
		ИмяФайла = ВыбранныйФайл.Имя;
		НачатьТранзакцию();
		Блокировка 				= Новый БлокировкаДанных;
		ЭлементБлокировки 		= Блокировка.Добавить("Справочник.ФайлыХранилищаДанных");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		Отказ=Ложь;
		ИмяТаблицы=МодульРаботыСФайламиХранилищаДанныхСерверВызовСервера.ИмяТаблицыХраненияДанныхВоВнешнемХранилище(Ссылка);
		СправочникОбъект = Ссылка.ПолучитьОбъект();
		СправочникОбъект.ИмяФайла = ИмяФайла;
		СправочникОбъект["Ссылка"+ИмяТаблицы]=МодульРаботыСФайламиХранилищаДанных.ПоместитьДанныеФайла(Ссылка, Диалог.ПолноеИмяФайла, ИмяФайла, Отказ);
		Если не отказ Тогда 
			СправочникОбъект.Записать();
			ЗафиксироватьТранзакцию();
		Иначе 
			ОтменитьТранзакцию();
			Предупреждение("Файл не записан! Проблемы помещения данных.");
			Возврат;
		КонецЕсли;
	Исключение
		Предупреждение(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

// Проверить данные хранилища
//
// Параметры
//  Предупреждать  – Булево – Выводить или нет предупреждение о том, что хранилище пусто
//
// Возвращаемое значение:
//   Булево   – Истина, если хранилище не пусто, Ложь - иначе
//
Функция ПроверитьДанныеХранилища(Предупреждать)
	Ссылка = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
	
	Если МодульРаботыСФайламиХранилищаДанныхСерверВызовСервера.ЕстьДанные(Ссылка) Тогда 
	////Если Хранилище.Получить() <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Предупреждать Тогда
		Предупреждение("Хранилище пусто!");
	КонецЕсли;
	Возврат Ложь;
КонецФункции // ПроверитьДанныеХранилища()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	// доступ к операции записи
	ЭлементыФормы.ДействияФормы.Кнопки.КнопкаИзменить.Доступность = РольДоступна("ПолныеПрава");
	
КонецПроцедуры
