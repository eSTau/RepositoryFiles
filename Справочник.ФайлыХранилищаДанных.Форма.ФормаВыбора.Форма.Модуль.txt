
// Открыть файл на просмотр
Процедура ДействияФормыКнопкаОткрыть(Кнопка)
	Если ЭлементыФормы.СправочникСписок.ТекущиеДанные = Неопределено Тогда 
		Возврат;
	Иначе
		Ссылка = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
		ИмяФайла = ЭлементыФормы.СправочникСписок.ТекущиеДанные.ИмяФайла;
	КонецЕсли;
	
	Если Не ПроверитьДанныеХранилища(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКаталога = ПолучитьИмяВременногоФайла("") + ПолучитьРазделительПути();
	СоздатьКаталог(ИмяКаталога);
	ПолноеИмяФайла = "";
	
	Если МодульРаботыСФайламиХранилищаДанных.РезультатПолученияДанных(Ссылка, ИмяКаталога, ПолноеИмяФайла) Тогда 
		КодВозврата = Неопределено;
		
		ЗапуститьПриложение("""" + ПолноеИмяФайла + """", , Истина, КодВозврата);
		
		Если КодВозврата <> Неопределено Тогда 
			МодульРаботыСФайламиХранилищаДанных.УдалитьВременныйФайл(ПолноеИмяФайла);
		КонецЕсли;
		
		Возврат;
	Иначе 
		Предупреждение("Файл не доступен! Проблемы получения данных.");
		Возврат;
	КонецЕсли;
КонецПроцедуры

// Проверить данные хранилища
//
// Параметры
//  Предупреждать  – Булево – Выводить или нет предупреждение о том, что хранилище пусто
//
// Возвращаемое значение:
//   Булево   – Истина, если хранилище не пусто, Ложь - иначе
//
Функция ПроверитьДанныеХранилища(Предупреждать)
	Ссылка = ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка;
	
	Если МодульРаботыСФайламиХранилищаДанныхСерверВызовСервера.ЕстьДанные(Ссылка) Тогда 
	////Если Хранилище.Получить() <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Предупреждать Тогда
		Предупреждение("Хранилище пусто!");
	КонецЕсли;
	Возврат Ложь;
КонецФункции // ПроверитьДанныеХранилища()

